/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        combos {
                compatible = "zmk,combos";
                combo_alt {
                        timeout-ms = <50>;
                        key-position = <37 38>;
                        bindings = <&kp LALT>;
                        slow-release = "true";
                };
                combo_del {
                        timeout-ms = <50>;
                        key-position = <40 41>;
                        bindings = <&kp DEL>;
                };
        }
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | lbkt |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | shift  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 1 &kp BSPC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  esc |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | DOWN|  UP | RGT |      |
// | SHFT |     |     |     |     |BTCLR|   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &kp LSHFT  &trans       &bt BT_CLR        &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |     |     |     |     |     |   |     |  =  |  [  |  ]  |    |  -   |
// | CTRL |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  ) | BSPC |
// | SHFT |  \  |  |  |     |     |     |   |  ~  |  +  |  \  |  }  | \  |  `   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC   &trans  &kp RA(N2) &kp RA(N3)   &kp RA(N4) &trans      &trans       &kp RA(N7) &kp RA(N8)    &kp RA(N9) &kp RA(N0)  &kp MINUS
   &kp LCTRL &kp EXCL &kp AT    &kp HASH     &kp DLLR   &kp PRCNT   &kp CARET    &kp AMPS   &kp ASTRK     &kp LPAR  &kp RPAR     &kp BSPC
   &kp LSHFT &kp NUBS &kp PIPE2 &kp RA(NUBS) &trans     &trans      &kp RA(RBRC) &kp PLUS   &kp RA(MINUS) &kp RBRC  &kp BSLH     &kp GRAVE
                                &kp LGUI   &trans     &kp SPACE   &kp RET   &trans     &trans
                        >;
                };
        };
};
